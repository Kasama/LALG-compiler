%{
	#include "syntatic.h"
	typedef struct reserved_word {
		char *name;
		int value;
	} RESERVED_WORD;
%}
%readonly-tables
%struct-type
struct reserved_word
%%
and,RESERVED_AND
and_then,RESERVED_AND_THEN
array,RESERVED_ARRAY
begin,RESERVED_BEGIN
case,RESERVED_CASE
class,RESERVED_CLASS
const,RESERVED_CONST
div,RESERVED_DIV
do,RESERVED_DO
downto,RESERVED_DOWNTO
else,RESERVED_ELSE
end,RESERVED_END
file,RESERVED_FILE
for,RESERVED_FOR
function,RESERVED_FUNCTION
goto,RESERVED_GOTO
if,RESERVED_IF
in,RESERVED_IN
label,RESERVED_LABEL
list,RESERVED_LIST
mod,RESERVED_MOD
nil,RESERVED_NIL
not,RESERVED_NOT
object,RESERVED_OBJECT
of,RESERVED_OF
or,RESERVED_OR
or_else,RESERVED_OR_ELSE
otherwise,RESERVED_OTHERWISE
packed,RESERVED_PACKED
procedure,RESERVED_PROCEDURE
program,RESERVED_PROGRAM
record,RESERVED_RECORD
repeat,RESERVED_REPEAT
set,RESERVED_SET
shl,RESERVED_SHL
shr,RESERVED_SHR
then,RESERVED_THEN
to,RESERVED_TO
type,RESERVED_TYPE
until,RESERVED_UNTIL
var,RESERVED_VAR
while,RESERVED_WHILE
with,RESERVED_WITH
xor,RESERVED_XOR
integer,RESERVED_TYPE_INTEGER
real,RESERVED_TYPE_REAL
read,RESERVED_READ
write,RESERVED_WRITE
"=",SYMBOL_EQ
"<=",SYMBOL_LESS_THAN_EQ
">=",SYMBOL_GREATER_THAN_EQ
"<>",SYMBOL_DIFFERENT
":=",SYMBOL_ASSIGN
"+",SYMBOL_PLUS
"-",SYMBOL_MINUS
"*",SYMBOL_TIMES
"/",SYMBOL_DIV
":",SYMBOL_COLON
";",SYMBOL_SEMICOLON
".",SYMBOL_PERIOD
",",SYMBOL_COMMA
"[",SYMBOL_SBRACKED_OPEN
"]",SYMBOL_SBRACKED_CLOSE
"(",SYMBOL_PARENS_OPEN
")",SYMBOL_PARENS_CLOSE
">",SYMBOL_GREATER_THAN
"<",SYMBOL_LESS_THAN
